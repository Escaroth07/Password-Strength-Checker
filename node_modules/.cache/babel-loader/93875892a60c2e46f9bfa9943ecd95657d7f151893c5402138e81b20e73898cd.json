{"ast":null,"code":"export async function scorePassword(pw){let dict=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];let personalInfo=arguments.length>2&&arguments[2]!==undefined?arguments[2]:[];let breachChecker=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;function hasUpper(str){return /[A-Z]/.test(str);}function hasLower(str){return /[a-z]/.test(str);}function hasNumber(str){return /\\d/.test(str);}function hasSymbol(str){return /[!@#$%^&*()_\\-+=\\[\\]{}|;:'\",.<>?/\\\\]/.test(str);}function isCommonPattern(str){return /qwerty|123456|password|asdfgh/i.test(str);}function containsDictionaryWord(str,dict){let lower=str.toLowerCase();return dict.some(word=>lower.includes(word));}function calcEntropy(pw){let setSize=0;if(hasLower(pw))setSize+=26;if(hasUpper(pw))setSize+=26;if(hasNumber(pw))setSize+=10;if(hasSymbol(pw))setSize+=32;return pw.length*Math.log2(setSize||1);}function personalInfoCheck(pw,personalInfo){for(let info of personalInfo){if(info&&pw.toLowerCase().includes(info.toLowerCase()))return true;}return false;}let score=0,feedback=[];// Length\nif(pw.length>=15)score+=3;else if(pw.length>=12)score+=2;else if(pw.length>=8)score+=1;else feedback.push(\"Use at least 8 characters (15+ is best)\");// Diversity\nlet diversity=0;if(hasLower(pw))diversity++;if(hasUpper(pw))diversity++;if(hasNumber(pw))diversity++;if(hasSymbol(pw))diversity++;if(diversity===1)feedback.push(\"Mix uppercase, lowercase, numbers, symbols\");score+=diversity;// Entropy\nlet entropy=calcEntropy(pw);if(entropy>60)score+=2;else if(entropy>40)score+=1;// Patterns\nif(isCommonPattern(pw)){feedback.push(\"Avoid common patterns\");score-=2;}// Dictionary\nif(containsDictionaryWord(pw,dict)){feedback.push(\"Avoid common words\");score-=2;}// Personal info\nif(personalInfoCheck(pw,personalInfo)){feedback.push(\"Don't use personal info\");score-=2;}// Breach check\nlet breached=false;if(breachChecker){breached=await breachChecker(pw);if(breached){feedback.push(\"This password appears in a breach—do not use it!\");score=0;}}score=Math.max(0,Math.min(score,8));let levels=[\"Very Weak\",\"Weak\",\"Fair\",\"Good\",\"Strong\",\"Very Strong\",\"Excellent\",\"Unbreakable\"];return{score,strength:levels[score],entropy:entropy.toFixed(1),feedback,breached};}","map":{"version":3,"names":["scorePassword","pw","dict","arguments","length","undefined","personalInfo","breachChecker","hasUpper","str","test","hasLower","hasNumber","hasSymbol","isCommonPattern","containsDictionaryWord","lower","toLowerCase","some","word","includes","calcEntropy","setSize","Math","log2","personalInfoCheck","info","score","feedback","push","diversity","entropy","breached","max","min","levels","strength","toFixed"],"sources":["F:/Projects/password-strength-checker/src/utils/passwordScoring.js"],"sourcesContent":["export async function scorePassword(pw, dict = [], personalInfo = [], breachChecker = null) {\r\n    function hasUpper(str) { return /[A-Z]/.test(str); }\r\n    function hasLower(str) { return /[a-z]/.test(str); }\r\n    function hasNumber(str) { return /\\d/.test(str); }\r\n    function hasSymbol(str) { return /[!@#$%^&*()_\\-+=\\[\\]{}|;:'\",.<>?/\\\\]/.test(str); }\r\n    function isCommonPattern(str) { return /qwerty|123456|password|asdfgh/i.test(str); }\r\n    function containsDictionaryWord(str, dict) {\r\n        let lower = str.toLowerCase();\r\n        return dict.some(word => lower.includes(word));\r\n    }\r\n    function calcEntropy(pw) {\r\n        let setSize = 0;\r\n        if (hasLower(pw)) setSize += 26;\r\n        if (hasUpper(pw)) setSize += 26;\r\n        if (hasNumber(pw)) setSize += 10;\r\n        if (hasSymbol(pw)) setSize += 32;\r\n        return pw.length * Math.log2(setSize || 1);\r\n    }\r\n    function personalInfoCheck(pw, personalInfo) {\r\n        for (let info of personalInfo) {\r\n            if (info && pw.toLowerCase().includes(info.toLowerCase())) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    let score = 0, feedback = [];\r\n    // Length\r\n    if (pw.length >= 15) score += 3;\r\n    else if (pw.length >= 12) score += 2;\r\n    else if (pw.length >= 8) score += 1;\r\n    else feedback.push(\"Use at least 8 characters (15+ is best)\");\r\n    // Diversity\r\n    let diversity = 0;\r\n    if (hasLower(pw)) diversity++;\r\n    if (hasUpper(pw)) diversity++;\r\n    if (hasNumber(pw)) diversity++;\r\n    if (hasSymbol(pw)) diversity++;\r\n    if (diversity === 1) feedback.push(\"Mix uppercase, lowercase, numbers, symbols\");\r\n    score += diversity;\r\n    // Entropy\r\n    let entropy = calcEntropy(pw);\r\n    if (entropy > 60) score += 2;\r\n    else if (entropy > 40) score += 1;\r\n    // Patterns\r\n    if (isCommonPattern(pw)) {\r\n        feedback.push(\"Avoid common patterns\");\r\n        score -= 2;\r\n    }\r\n    // Dictionary\r\n    if (containsDictionaryWord(pw, dict)) {\r\n        feedback.push(\"Avoid common words\");\r\n        score -= 2;\r\n    }\r\n    // Personal info\r\n    if (personalInfoCheck(pw, personalInfo)) {\r\n        feedback.push(\"Don't use personal info\");\r\n        score -= 2;\r\n    }\r\n    // Breach check\r\n    let breached = false;\r\n    if (breachChecker) {\r\n        breached = await breachChecker(pw);\r\n        if (breached) {\r\n            feedback.push(\"This password appears in a breach—do not use it!\");\r\n            score = 0;\r\n        }\r\n    }\r\n    score = Math.max(0, Math.min(score, 8));\r\n    let levels = [\r\n        \"Very Weak\", \"Weak\", \"Fair\", \"Good\", \"Strong\", \"Very Strong\", \"Excellent\", \"Unbreakable\"\r\n    ];\r\n    return {\r\n        score,\r\n        strength: levels[score],\r\n        entropy: entropy.toFixed(1),\r\n        feedback,\r\n        breached\r\n    };\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}